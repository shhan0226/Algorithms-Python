#!/usr/bin/python
# -*- coding:utf-8 -*-

# 작성자 : 한석현
import sys
import os
import commands
import optparse



option_min = 0
option_start = 0
option_end = 0
option_window = 0
option_avg = 0
option_format = "sa"

total = 0
remove = 0

file_read = ['', '', '', '']

def check(file_read, total, remove):
	if len(sys.argv) <= 3:
		print "======= <name option int input output> ========"
		raise SystemExit(1)
	#명령 옵션 파서를 생성하고 optionpaser인스턴스 반환(도움말 보여줄 설명 문자열, 옵션전달 출력 문자열)
	p = optparse.OptionParser(description="reserch", usage= "name option int intput output")

	#인수를 받아들이는 옵션(옵션, 받아들이기, 옵션값저장속성, 옵션타입, 디폴트, 옵션도움말)
	p.add_option("-l", action="store",dest="outfile1", type="int", default="0", help="min")
	p.add_option("-s", action="store",dest="outfile2", type="int", default="0", help="start")
	p.add_option("-e", action="store",dest="outfile3", type="int", default="0", help="end")
	p.add_option("-w", action="store",dest="outfile4", type="int", default="0", help="window")
	p.add_option("-a", action="store",dest="outfile5", type="int", default="0", help="avg")
	p.add_option("-f", action="store",dest="outfile6", type="choice", choices=['sa', 'so','il'], default="sa", help="format")

	#기본값 설정
	p.set_defaults(debug=False)
	
	#명령줄을 파싱(opt는 옵션값 객체, args는 옵션이 아닌 항목 리스트)
	opts, args = p.parse_args()


	argc = len(sys.argv)
	for arg in sys.argv:
		print arg
	print sys.argv

	
	print "opts = "
	print opts
	print "args = "
	print args

	option_min = opts.outfile1
#	print "START OPTION_MIN = %s "%option_min
	option_start = opts.outfile2
	option_end = opts.outfile3
	option_window = opts.outfile4
	option_avg = opts.outfile5
	option_format = opts.outfile6

	input_file = args[0]
	output_file = args[1]
	try:
		f = open(input_file, "r")
	except IOError:
		print "There is no %s file" %input_file
		sys.exit(1)
	
	w = open(output_file, "w")
	count = 0

	print "START!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	for file_line in f.readlines():
		if file_line =="":
			continue
		total += 1
		#파일 읽어 리스트저장
		file_read[count] = file_line.strip()
		
		#옵션처리
		if option_min != 0:
#			print "start!!! %s" %file_read
			file_read = check_option_min(file_read, option_min)

		if option_start !=0: #file_read[3]에서 시작시 ''이면 그 줄은 버린다1
			file_read = check_option_start(file_read, option_start)
		
		if option_end !=0:
			file_read = check_option_end(file_read, option_end)

		if option_avg !=0:
			file_read = check_option_avg(file_read, option_avg, option_format)

		#if option_wiondow != 0: 윈도우 사이즈가 개수를 말하는지 아니면 평균값을 말하는지 모르겠음??
		#	file_read = check_option_window(file_read, option_window)
#		print "================> %s" %file_read
		if count == 3:	
			count = 0
			if file_read[3] != '':
				w.write("%s\n%s\n%s\n%s\n" %(file_read[0].strip(), file_read[1].strip(), file_read[2].strip(), file_read[3].strip()))
				continue
			else:
				remove += 1
				continue
		count +=1

			
	print "total %s"%total
	print "remove %s"%remove


def check_option_start(file_read, option_start):
	file_read[1] = file_read[1][option_start:]
	file_read[3] = file_read[3][option_start:]
	return file_read

def check_option_end(file_read, option_end):
	file_read[1] = file_read[1][:option_end]
	file_read[3] = file_read[3][:option_end]
	return file_read

def check_option_window(file_read, option_window):
	read_count = len(file_read[3])
	if read_count != 0:
		r_list = [0 for i in range(read_count)]
		for i in range(0, read_count):
			asci = ord(file_read[3][i])
			r_list[i] = asci
	
		#if option_window == read_count:
		#	total_sum = sum(r_list)
		#	total_avg = total_sum / read_count

		#if option_window >= read_count:

		#if option_window <= read_count:
		#if option_avg > total_avg:
		#	file_read[3] = ''
		#	return file_read
		#else:
		#	return file_read
	else:
		file_read[3] =''
		return	file_read


def check_option_avg(file_read, option_avg, option_format):	
	read_format = { "sa" : [33,126], "so" : [59,126], "il" : [64,126] }
#	print "option avg = %s" %option_avg
	read_count = len(file_read[3])
#	print "read_count = %s" %read_count
	if read_count != 0:
#		print "NO 0!!!!!!!!!!!"
		r_list = [0 for i in range(read_count)]
		for i in range(0, read_count):
			asci = ord(file_read[3][i])
			if (asci >= read_format[option_format][0]) and (asci <= read_format[option_format][1]):
				r_list[i] = asci - read_format[option_format][0]
	
		total_sum = sum(r_list)
#		print "total sum = %s" %total_sum
		total_avg = total_sum / read_count
#		print "total avg = %s" %total_avg
		if option_avg > total_avg:
			file_read[3] = ''
			return file_read
		else:
			return file_read
	else:
#		print "OK 0!!!!!!!!!!!!!!!!!!!!"
		file_read[3] =''
		return	file_read

def check_option_min(file_read, option_min):
#	print "option_min = %s" %option_min
	if option_min >= len(file_read[3]):
		file_read[3] = ''
#		print "in<<<<<<<%s" %file_read
		return file_read
		
	else:
#		print "NO<<<<<<<%s" %file_read
		return file_read
	
if __name__ == '__main__':
	check(file_read, total, remove)
